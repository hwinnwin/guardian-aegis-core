name: ðŸš€ Release â€¢ Auto

on:
  workflow_dispatch:
    inputs:
      tag: { description: "Tag to create (e.g., v1.2.3 or v1.2.3-beta.4)", required: true }
      channel: { description: "beta | production", required: true, default: "beta" }

permissions:
  contents: write
  actions: write

concurrency:
  group: release-auto-${{ inputs.tag }}
  cancel-in-progress: true

jobs:
  preflight-changelog:
    name: Preflight Changelog (STRICT)
    runs-on: ubuntu-latest
    timeout-minutes: 10
    steps:
      - name: Checkout (full)
        uses: actions/checkout@08c6903cd8c0fde910a37f88322edcfb5dd907a8 # v4.2.2
        with:
          fetch-depth: 0
      - name: Setup Node
        uses: actions/setup-node@2028fbc5c25fe9cf00d9f06a71cc4710d4507903 # v4.0.3
        with:
          node-version: "22.19.0"
          cache: "pnpm"
      - name: Setup pnpm
        uses: pnpm/action-setup@41ff72655975bd51cab0327fa583b6e92b6d3061 # v4.0.0
        with:
          version: 9
      - name: Install (dev deps)
        run: pnpm install --frozen-lockfile
      - name: Generate changelog section (STRICT)
        env:
          CHANGELOG_STRICT: "true"
          GITHUB_REF: refs/tags/${{ inputs.tag }}
        run: pnpm run changelog:section > CHANGELOG_SECTION.md
      - name: Upload changelog section
        uses: actions/upload-artifact@ea165f8d65b6e75b540449e92b4886f43607fa02 # v4.4.3
        with:
          name: changelog-section
          path: CHANGELOG_SECTION.md

  tag-and-dispatch:
    name: Tag & Dispatch CD
    runs-on: ubuntu-latest
    needs: preflight-changelog
    timeout-minutes: 15
    steps:
      - name: Checkout
        uses: actions/checkout@08c6903cd8c0fde910a37f88322edcfb5dd907a8 # v4.2.2
        with: { fetch-depth: 0 }

      - name: Create tag if missing
        env:
          TAG: ${{ inputs.tag }}
        run: |
          if git rev-parse "${TAG}^{tag}" >/dev/null 2>&1; then
            echo "Tag ${TAG} already exists (ok)."
          else
            git config user.name "github-actions[bot]"
            git config user.email "github-actions[bot]@users.noreply.github.com"
            git tag -a "${TAG}" -m "Release ${TAG}"
            git push origin "${TAG}"
          fi

      - name: Dispatch CD â€¢ Dashboard
        env:
          GH_TOKEN: ${{ secrets.GITHUB_TOKEN }}
          CHANNEL: ${{ inputs.channel }}
        run: |
          gh workflow run "cd-dashboard.yml" -f channel="${CHANNEL}"

      - name: Dispatch CD â€¢ Extension
        env:
          GH_TOKEN: ${{ secrets.GITHUB_TOKEN }}
          CHANNEL: ${{ inputs.channel }}
        run: |
          gh workflow run "cd-extension.yml" -f channel="${CHANNEL}"

  append-changelog-to-release:
    name: Attach Changelog Section
    runs-on: ubuntu-latest
    needs: tag-and-dispatch
    timeout-minutes: 10
    permissions:
      contents: write
    steps:
      - name: Download changelog section
        uses: actions/download-artifact@d3f86a106a0bac45b974a628896c90dbdf5c8093 # v4.1.8
        with:
          name: changelog-section
          path: .
      - name: Append to Release notes
        env:
          GH_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        run: |
          TAG="${{ inputs.tag }}"
          echo -e "\n---\n\n## Changelog\n" >> RELEASE_NOTES_APPEND.md
          cat CHANGELOG_SECTION.md >> RELEASE_NOTES_APPEND.md
          CURR="$(gh release view "$TAG" --json body -q .body || echo '')"
          printf "%s\n\n%s\n" "$CURR" "$(cat RELEASE_NOTES_APPEND.md)" > NEW_NOTES.md
          gh release edit "$TAG" --notes-file NEW_NOTES.md
