name: CD â€¢ Extension (MV3)

on:
  workflow_dispatch:
    inputs:
      channel:
        description: "beta | production"
        required: true
        default: "beta"

env:
  APP_VERSION: ${{ github.ref_name }}

jobs:
  build:
    name: Build & Zip
    runs-on: ubuntu-latest
    outputs:
      sha256: ${{ steps.hash.outputs.sha256 }}
    steps:
      - uses: actions/checkout@08c6903cd8c0fde910a37f88322edcfb5dd907a8 # v5
      - uses: actions/setup-node@2028fbc5c25fe9cf00d9f06a71cc4710d4507903 # v6
        with: { node-version: '22.19.0', cache: 'pnpm' }
      - uses: pnpm/action-setup@41ff72655975bd51cab0327fa583b6e92b6d3061 # v4
        with: { version: 9 }
      - run: pnpm install --frozen-lockfile
      - run: pnpm run version:stamp
      - run: pnpm run build:ext
      - id: zip
        run: echo "zip=$(ls -1 packages/extension/*.zip | head -n1)" >> "$GITHUB_OUTPUT"
      - id: hash
        run: echo "sha256=$( (command -v shasum >/dev/null && shasum -a 256 ${{ steps.zip.outputs.zip }} || sha256sum ${{ steps.zip.outputs.zip }}) | awk '{print $1}' )" >> "$GITHUB_OUTPUT"
      - uses: actions/upload-artifact@ea165f8d65b6e75bd51cab0327fa583b6e92b6d3061 # v4
        with: { name: extension-zip, path: "${{ steps.zip.outputs.zip }}
version.json" }

  publish:
    name: Upload + Publish
    runs-on: ubuntu-latest
    needs: build
    environment: ${{ inputs.channel }}
    steps:
      - uses: actions/checkout@08c6903cd8c0fde910a37f88322edcfb5dd907a8 # v5
      - uses: actions/download-artifact@d3f86a106a0bac45b974a628896c90dbdf5c8093 # v4
        with: { name: extension-zip, path: ./art }
      - name: Verify SHA
        run: |
          f=$(ls -1 art/*.zip | head -n1)
          calc=$( (command -v shasum >/dev/null && shasum -a 256 "$f" || sha256sum "$f") | awk '{print $1}' )
          want="${{ needs.build.outputs.sha256 }}"
          echo "calc=$calc | want=$want"
          [ "$calc" = "$want" ] || { echo "::error::SHA mismatch"; exit 1; }
      - name: Publish to Chrome Web Store
        env:
          EXT_ID: ${{ (inputs.channel == 'production') && secrets.CWS_EXTENSION_ID_PROD || secrets.CWS_EXTENSION_ID_BETA }}
          CWS_CLIENT_ID: ${{ secrets.CWS_CLIENT_ID }}
          CWS_CLIENT_SECRET: ${{ secrets.CWS_CLIENT_SECRET }}
          CWS_REFRESH_TOKEN: ${{ secrets.CWS_REFRESH_TOKEN }}
        run: |
          npm i -g chrome-webstore-upload-cli@3
          ZIP=$(ls -1 art/*.zip | head -n1)
          chrome-webstore-upload upload \
            --extension-id "$EXT_ID" \
            --client-id "$CWS_CLIENT_ID" \
            --client-secret "$CWS_CLIENT_SECRET" \
            --refresh-token "$CWS_REFRESH_TOKEN" \
            --file "$ZIP"
          chrome-webstore-upload publish \
            --extension-id "$EXT_ID" \
            --client-id "$CWS_CLIENT_ID" \
            --client-secret "$CWS_CLIENT_SECRET" \
            --refresh-token "$CWS_REFRESH_TOKEN"
